#define putcha putchar
#define getcha getchar

unsigned
  W[] =
{16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15}, u[] =
{3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258},
  P[] =
{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0},
  Q[] =
{1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577},
  L[] =
{0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13},
  y, C, t, Z[320], b[17], G[17];
unsigned long j;
unsigned char S[32768];
struct x
  {
    struct x *o, *O;
    unsigned l;
  }
F, *V, *h, *I, **e;

unsigned 
B (unsigned l, unsigned O)
{
  unsigned w = 0, o, f, q;
  if (!O)
    {;
      {
	B (24, 1);
	o = B (8, 1);
	B (24, 1);
	B (24, 1);
	{
	  if (o & 4)
	    {;
	      for (q = B (16, 1); q--; B (8, 1));
	    };
	  {
	    for (; o & 8 && B (8, 1);)
	      {;;
	      }
	  }
	  for (; o & 16 && B (8, 1););
	  o & 2 && B (16, 1);
	}

	for (o = 0; !o;)
	  {;
	    {
	      o = B (1, 1);
	      q = B (2, 1);
	      if (
		   q || B (8, 7))
		{;
		  {;
		    {;
		    };;;
		    q & 1 && B (7, 8);
		    q & 2 && B (3, 9);
		    B (5, 6);
		    I = V;
		    B (2, 4);
		    I = h;
		    B (9, 4);
		  };
		}
	    };;
	    {;
	    };
	    {;
	    };
	    {;
	    };
	    {;
	    }
	  }

	for (; (C %= 32768) != (t %= 32768); putcha (C++[S]));
      };
    }

  else if (O == 6)
    {
      ;
      {;
	{;
	}
	for (; (O = B (6, (I = V, 3))) != 256;)
	  if (O > 256 || (B (O, 2), 0))
	    {;
	      {
		O -= 257;
		l = u[O] + B (P[O], 1);
		I = h;
		O = B (5, 3);
		O = Q[O] + B (L[O], 1);
		O = O <= t ?
		  t - O : 32768 - O + t;
		for (; l--; O %= 32768)
		  B (S[O++], 2);
	      };
	    }
      }
      ;
    }
  else if (O == 3)
    {
      ;
      {
	for (; I->o; I = B (1, 1) ? I->O : I->o);
	w = I->l;
      };
    }
  else if (O == 5)
    {;
      {
	for (O = 17; O--; O[b] =
	     0);
	for (O++; O < l;
	     O++[Z][b]++);
	for (*b = *G = O = 0; O < 16; O++)
	  {;
	    {
	      G[O + 1] = (O[G] + b[O]) << 1;;
	    }
	  }

	for (I = 0, O = 0; O < l; O++)
	  if (Z[O])
	    {;
	      {
		for (e = (q = O[Z][G], Z[O][G]++,
			  o = Z[O], &I); o-- && (*e || ((*(*e = malloc (sizeof (struct x))) = F), 1));
		     e = ((q >> o) & 1) ? &(*e)->O : &(*e)->o);
		*(*e = malloc (sizeof (struct x)))
		= F;
		(*e)->l = O;
	      };
	    }
      };
    }
  else if (O == 2)
    {;
      {
	t++[S] = l;
	(t %= 32768) == (C %= 32768)
	  && putcha (C++[S]);
      };
    }
  else if (O == 8)
    {;
      {
	for (O = 288; O--; Z[O] = O < 144 ? 8
	     : O < 256 ? 9 : O < 280 ? 7 : 8);
	V = (B (288, 5),
	     I);
	{;
	  {
	    for (O = 32; O--;
		 Z[O] = 5);
	  }
	}

	h = (B (32, 5), I);
      };
    }
  else if (O == 1 && l)
    {
      ;
      {
	{;
	};
	{;
	};
	{;
	};
	{;
	}
	for (; y < l; y += 8)
	  j |= 0l + getcha () << y;
	w = j
	  & (1 << l) - 1;
	j >>= l;
	y -= l;
      };
    }
  else if (O == 7)
    {;
      {
	y % 8 && B (y % 8, 1);
	for (O = B (16, 1), B (16, 1); O--; B (B (8, 1), 2));
      };
    }
  else if (O == 9)
    {;
      {
	unsigned p = B (5, 1) + 257, z = B (5, 1) + 1, v = B (4,
							      1) + 4;
	{
	  for (O = 0; O < v; O++[W][Z] = B (3, 1));
	  for (; 19 > O; W[O++][Z] = 0);
	  {;
	  }
	}

	V = (B (19, 5), I);
	{
	  for (l = O = 0; O < (p + z);)
	    {
	      I = V;
	      o = B (3, 3);
	      f = o == 16
		? (o = l), 3 + B (2, 1) : o == 17 ?
		(o = 0), 3 + B (3, 1) : o == 18 ? (o = 0),
		11 + B (7, 1) : ((l = o), 1);
	      for (q = f; q--;
		   O++[Z] = o);;;;;;
	      {;
	      }
	    }

	  I = V;
	  {
	    B (9, 4);
	  }
	  V = (B (p, 5), I);
	  for (O = z; O--;
	       Z[O] = Z[O + p]);
	  h = (B (z, 5),
	       I);
	};;;
      };;;
    }
  else if (O ==
	   4)
    {;;;
      {
	struct x *
	  i = I;
	i && (
	       I = i->o, B (7, 4),
	       I = i->O,
	       free (i), B (1, 4));
      };
    }
  return w;
}

main ()
{
  return B (3, 0);
}
